Things to take care of
1. Time complexity
2. Space complexity
3. Optimise the program

Types

1. Linear
	a. Array
	b. Stack
	c. Queue
	d. Linked List 
2. Non-linear
	a. Tree
	b. Graph

Searching techniques
1. Linear
2. Binary

Sorting techniques
1. Bubble
2. Selection
3. Merge
4. Insertion
5. Quick

Leetcode to be performed regularly

Interviewers see these 3 cases:

1. Best - Fastest
2. Average
3. Worst - Slowest

Asymptotic notations

1. Big O - Worst case - upper bound, takes max time
2. Omega - Best case - lower bound, takes min time
3. Theta - Average case - right bound

Array: 

length/size = zero to (size - 1)

index or subscript

index starts with 0 whereas location starts with 1.

In bubble sort, from start to end, you compare 2 values and swap them if they're in descending order. 
Once you reach end, one pass is complete with at max n - 1 subpasses.
Max number of passes = n - 1

Time complexity of bubble sort: n*n or n^2

Selection sort better then bubble sort.

In selection sort, you pick the smallest element and swap it with index in ascending order. This completes 1 pass.
